---
confluent_repo_version: 5.5
confluent_package_version: 5.5.1
confluent_full_package_version: "{{ confluent_package_version + '-1' }}"
confluent_package_redhat_suffix: "{{ '-' + confluent_full_package_version if confluent_full_package_version != '' else ''}}"
confluent_package_debian_suffix: "{{ '=' + confluent_full_package_version if confluent_full_package_version != '' else ''}}"

kafka_broker_service_name: confluent-kafka
kafka_broker_main_package: confluent-kafka-2.12
kafka_broker_packages:
  - confluent-common
  - confluent-rest-utils
  - confluent-metadata-service
  - "{{ kafka_broker_main_package }}"
  - confluent-rebalancer
  - confluent-security
  
kafka_broker_default_user: cp-kafka
kafka_broker_default_group: confluent
kafka_broker_user: "{{kafka_broker_default_user}}"
kafka_broker_group: "{{kafka_broker_default_group}}"

kafka_broker_default_interal_replication_factor: "{{ [ groups['kafka_broker'] | length, 3 ] | min }}"


kafka_broker:
  datadir:
    - /var/lib/kafka/data
  appender_log_path: /var/log/kafka/ 
  appender_log_path: /var/log/kafka/
  kafka_appender_log_name: server.log
  kafka_appender_max_log_files: 10
  kafka_appender_log_file_size: 100MB
  state_change_appender_log_name: state-change.log
  state_change_appender_max_log_files: 10
  state_change_appender_log_file_size: 100MB
  request_appender_log_name: kafka-request.log
  request_appender_max_log_files: 10
  request_appender_log_file_size: 100MB
  cleaner_appender_log_name: log-cleaner.log
  cleaner_appender_max_log_files: 10
  cleaner_appender_log_file_size: 100MB
  controller_appender_log_name: controller.log
  controller_appender_max_log_files: 10
  controller_appender_log_file_size: 100MB
  authorizer_appender_log_name: kafka-authorizer.log
  authorizer_appender_max_log_files: 10
  authorizer_appender_log_file_size: 100MB
  metadata_appender_log_name: metadata.log
  metadata_appender_max_log_files: 10
  metadata_appender_log_file_size: 100mb
  config_file: /etc/kafka/server.properties
  systemd_file: /usr/lib/systemd/system/{{kafka_broker_service_name}}.service
  systemd_override: /etc/systemd/system/{{kafka_broker_service_name}}.service.d/override.conf
  properties:
    log.retention.check.interval.ms: 300000
    group.initial.rebalance.delay.ms: 3000
    log.retention.hours: 168
    log.segment.bytes: 1073741824
    num.io.threads: 16
    num.network.threads: 8
    num.partitions: 1
    num.recovery.threads.per.data.dir: 2
    offsets.topic.replication.factor: "{{kafka_broker_default_interal_replication_factor}}"
    socket.receive.buffer.bytes: 102400
    socket.request.max.bytes: 104857600
    socket.send.buffer.bytes: 102400
    transaction.state.log.min.isr: "{{ [ 2, kafka_broker_default_interal_replication_factor|int ] | min }}"
    transaction.state.log.replication.factor: "{{kafka_broker_default_interal_replication_factor}}"
    zookeeper.connection.timeout.ms: 18000
    confluent.license.topic.replication.factor: "{{kafka_broker_default_interal_replication_factor}}"
    confluent.metadata.topic.replication.factor: "{{kafka_broker_default_interal_replication_factor}}"
    confluent.security.event.logger.exporter.kafka.topic.replicas: "{{kafka_broker_default_interal_replication_factor}}"
    #confluent.support.metrics.enable: "{{confluent.support.metrics_enabled|bool|lower}}"
    #confluent.support.customer.id: "{{confluent.support.customer_id}}"
  
kafka_broker_service_overrides:
  LimitNOFILE:
  User: "{{ kafka_broker_user if kafka_broker_user != kafka_broker_default_user else '' }}"
  Group: "{{ kafka_broker_group if kafka_broker_group != kafka_broker_default_group else '' }}"

kafka_broker_service_environment_overrides:
  KAFKA_HEAP_OPTS: "-Xmx1g"
  
  
zookeeper:
  config_file: /etc/kafka/zookeeper.properties
  systemd_file: /usr/lib/systemd/system/{{zookeeper_service_name}}.service
  systemd_override: /etc/systemd/system/{{zookeeper_service_name}}.service.d/override.conf

service_name: "{{ kafka_broker_service_name }}"
packages: "{{ kafka_broker_packages }}"
backup_files:
 - "{{ kafka_broker.config_file }}"
 - "{{ kafka_broker.systemd_override }}"
 - "{{ zookeeper.config_file }}"
restore_files:
 - "{{ kafka_broker.config_file }}"
 - "{{ zookeeper.config_file }}"
