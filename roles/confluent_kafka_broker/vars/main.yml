---
confluent_repo_version: 5.5
confluent_package_version: 5.5.1
confluent_full_package_version: "{{ confluent_package_version + '-1' }}"
confluent_package_suffix: "{{ '-' + confluent_full_package_version if confluent_full_package_version != '' else ''}}"

kafka_broker_service_name: confluent-kafka
kafka_broker_main_package: confluent-kafka-2.12
kafka_broker_packages:
  - confluent-common
  - confluent-rest-utils
  - confluent-metadata-service
  - "{{ kafka_broker_main_package }}"
  - confluent-rebalancer
  - confluent-security
  
kafka_broker_default_user: cp-kafka
kafka_broker_default_group: confluent
kafka_broker_user: "{{kafka_broker_default_user}}"
kafka_broker_group: "{{kafka_broker_default_group}}"
kafka_broker:
  datadir:
    - /var/lib/kafka/datadir
  config_file: /etc/kafka/server.properties
  systemd_file: /usr/lib/systemd/system/{{kafka_broker_service_name}}.service
  systemd_override: /etc/systemd/system/{{kafka_broker_service_name}}.service.d/override.conf
kafka_broker_properties:
  defaults:
    enabled: true
    properties:
      group.initial.rebalance.delay.ms: 3000
      log.retention.check.interval.ms: 300000
      log.retention.hours: 168
      log.segment.bytes: 1073741824
      num.io.threads: 16
      num.network.threads: 8
      num.partitions: 1
      num.recovery.threads.per.data.dir: 2
      offsets.topic.replication.factor: "{{kafka_broker_default_internal_replication_factor}}"
      socket.receive.buffer.bytes: 102400
      socket.request.max.bytes: 104857600
      socket.send.buffer.bytes: 102400
      transaction.state.log.min.isr: "{{ [ 2, kafka_broker_default_internal_replication_factor|int ] | min }}"
      transaction.state.log.replication.factor: "{{kafka_broker_default_internal_replication_factor}}"
      zookeeper.connection.timeout.ms: 18000
      confluent.license.topic: _confluent-license
      confluent.license.topic.replication.factor: "{{kafka_broker_default_internal_replication_factor}}"
      confluent.metadata.topic.replication.factor: "{{kafka_broker_default_internal_replication_factor}}"
      confluent.balancer.topic.replication.factor: "{{kafka_broker_default_internal_replication_factor}}"
      confluent.security.event.logger.exporter.kafka.topic.replicas: "{{kafka_broker_default_internal_replication_factor}}"
      confluent.support.metrics.enable: "true"
      confluent.support.customer.id: anonymous
      zookeeper.connect: "{{ groups['zookeeper'] | default(['localhost']) | join(':' + zookeeper_client_port|string + ',') }}:{{zookeeper_client_port}}"
      log.dirs: "{{ kafka_broker.datadir | join(',') }}"
      listener.security.protocol.map: "{% for listener in kafka_broker_listeners|dict2items %}{% if loop.index > 1%},{% endif %}{{ listener['value']['name'] }}:{{ listener['value'] | kafka_protocol_defaults(ssl_enabled, sasl_protocol)}}{% endfor %}"
      listeners: "{% for listener in kafka_broker_listeners|dict2items %}{% if loop.index > 1%},{% endif %}{{ listener['value']['name'] }}://:{{ listener['value']['port'] }}{% endfor %}"
      advertised.listeners: "{% for listener in kafka_broker_listeners|dict2items %}{% if loop.index > 1%},{% endif %}{{ listener['value']['name'] }}://{{ listener['value']['hostname'] | default(inventory_hostname) }}:{{ listener['value']['port'] }}{% endfor %}"
      inter.broker.listener.name: "{{kafka_broker_listeners[kafka_broker_inter_broker_listener_name]['name']}}"
      kafka.rest.enable: "{{kafka_broker_rest_proxy_enabled|string|lower}}"
  
kafka_broker_final_properties: "{{ kafka_broker_properties }}" 
zookeeper:
  config_file: /etc/kafka/zookeeper.properties
  systemd_file: /usr/lib/systemd/system/{{zookeeper_service_name}}.service
  systemd_override: /etc/systemd/system/{{zookeeper_service_name}}.service.d/override.conf

service_name: "{{ kafka_broker_service_name }}"
packages: "{{ kafka_broker_packages }}"
backup_files:
 - "{{ kafka_broker.config_file }}"
 - "{{ kafka_broker.systemd_override }}"
 - "{{ zookeeper.config_file }}"
restore_files:
 - "{{ kafka_broker.config_file }}"
 - "{{ zookeeper.config_file }}"
