---
all:
 vars:
    ansible_connection: ssh
    ansible_user: ec2-user
    ansible_become: true
    confluent_server_enabled: false
    #### TLS Configuration ####
    ## By default, data will NOT be encrypted. To turn on TLS encryption, uncomment this line
    ssl_enabled: true
    ##Custom Keystores and Truststores
    ## CP-Ansible can move keystores/truststores to their corresponding hosts and configure the components to use them. Set These vars
    # ssl_provided_keystore_and_truststore: true
    # ssl_keystore_filepath: "/tmp/certs/{{inventory_hostname}}-keystore.jks"
    # ssl_keystore_key_password: mystorepassword
    # ssl_keystore_store_password: mystorepassword
    # ssl_truststore_filepath: "/tmp/certs/truststore.jks"
    # ssl_truststore_password: truststorepass
    # ssl_truststore_ca_cert_alias: <alias to the ca certificate in the truststore eg. CARoot>
    #### Zookeeper TLS Configuration ####
    ## Zookeeper can also have TLS Encryption and mTLS Authentication
    ## For backwards compatibility both will be turned off by default, even if ssl_enabled is set to true
    ## To enable TLS encryption and mTLS authentication uncomment these respectively
    # zookeeper_ssl_enabled: true
    #### Configuring Multiple Listeners ####
    ## CP-Ansible will configure two listeners on the broker: an internal listener for the broker to communicate and an external for the components and other clients.
    ## If you only need one listener uncomment this line:
    # kafka_broker_configure_additional_brokers: false
 children:
  zookeeper:
    hosts:
     ip-172-31-39-155.us-east-2.compute.internal:
     
    vars:
      zookeeper_user: custom-user
      zookeeper_group: custom-group
  kafka_broker:
     hosts:
      ip-172-31-39-155.us-east-2.compute.internal:
      
     vars:
      kafka_broker_user: custom-user
      kafka_broker_group: custom-group
      kafka_broker:
       datadir:
         - /var/lib/kafka/my-data
  kafka_connect:
     hosts:
      ip-172-31-39-155.us-east-2.compute.internal:
      
     vars:
      kafka_connect_user: custom-user
      kafka_connect_group: custom-group
      
   
  
 
    
  
      
     
  
